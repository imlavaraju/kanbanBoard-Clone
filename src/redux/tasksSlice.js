// Importing createSlice from Redux Toolkit
import { createSlice } from "@reduxjs/toolkit";

// Initial state with tasks loaded from localStorage or an empty array
const initialState = {
  tasks: JSON.parse(localStorage.getItem("tasks")) || [],
};

// Creating a slice for tasks with actions and reducers
const tasksSlice = createSlice({
  name: "tasks",
  initialState,
  reducers: {
    // Reducer to add a task
    addTask: (state, action) => {
      state.tasks.push(action.payload); // Adding the new task to the state
      localStorage.setItem("tasks", JSON.stringify(state.tasks)); // Saving the updated tasks to localStorage
    },
    // Reducer to move a task to a different column
    moveTask: (state, action) => {
      const { taskId, targetColumn } = action.payload; // Destructuring taskId and targetColumn from action.payload
      const task = state.tasks.find((task) => task.id === taskId); // Finding the task by its id
      if (task) {
        task.column = targetColumn; // Updating the task's column
        localStorage.setItem("tasks", JSON.stringify(state.tasks)); // Saving the updated tasks to localStorage
      }
    },
    // Reducer to set tasks (typically used for initializing state)
    setTasks: (state, action) => {
      state.tasks = action.payload; // Setting the tasks state
      localStorage.setItem("tasks", JSON.stringify(state.tasks)); // Saving the updated tasks to localStorage
    },
  },
});

// Exporting the actions generated by createSlice
export const { addTask, moveTask, setTasks } = tasksSlice.actions;
// Exporting the reducer generated by createSlice
export default tasksSlice.reducer;
